@256
D=A
@SP
M=D
@_RETURN_LABEL_1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(_RETURN_LABEL_1)
// C_FUNCTION, Class1.set, 0
(Class1.set)
D=0
// C_PUSH, argument, 0
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP, static, 0
@SP
M=M-1
A=M
D=M
@Class1.0
M=D
// C_PUSH, argument, 1
@ARG
A=M
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP, static, 1
@SP
M=M-1
A=M
D=M
@Class1.1
M=D
// C_PUSH, constant, 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN, return, 
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M-1
AM=D
D=M
@THAT
M=D
@R13
D=M-1
AM=D
D=M
@THIS
M=D
@R13
D=M-1
AM=D
D=M
@ARG
M=D
@R13
D=M-1
AM=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// C_FUNCTION, Class1.get, 0
(Class1.get)
D=0
// C_PUSH, static, 0
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH, static, 1
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC, sub, 
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN, return, 
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M-1
AM=D
D=M
@THAT
M=D
@R13
D=M-1
AM=D
D=M
@THIS
M=D
@R13
D=M-1
AM=D
D=M
@ARG
M=D
@R13
D=M-1
AM=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// C_FUNCTION, Sys.init, 0
(Sys.init)
D=0
// C_PUSH, constant, 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH, constant, 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_CALL, Class1.set, 2
@_RETURN_LABEL_2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(_RETURN_LABEL_2)
// C_POP, temp, 0
@SP
M=M-1
A=M
D=M
@5
M=D
// C_PUSH, constant, 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH, constant, 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_CALL, Class2.set, 2
@_RETURN_LABEL_3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(_RETURN_LABEL_3)
// C_POP, temp, 0
@SP
M=M-1
A=M
D=M
@5
M=D
// C_CALL, Class1.get, 0
@_RETURN_LABEL_4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(_RETURN_LABEL_4)
// C_CALL, Class2.get, 0
@_RETURN_LABEL_5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(_RETURN_LABEL_5)
// C_LABEL, END, 
(END)
// C_GOTO, END, 
@END
0;JMP
// C_FUNCTION, Class2.set, 0
(Class2.set)
D=0
// C_PUSH, argument, 0
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP, static, 0
@SP
M=M-1
A=M
D=M
@Class2.0
M=D
// C_PUSH, argument, 1
@ARG
A=M
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP, static, 1
@SP
M=M-1
A=M
D=M
@Class2.1
M=D
// C_PUSH, constant, 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN, return, 
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M-1
AM=D
D=M
@THAT
M=D
@R13
D=M-1
AM=D
D=M
@THIS
M=D
@R13
D=M-1
AM=D
D=M
@ARG
M=D
@R13
D=M-1
AM=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// C_FUNCTION, Class2.get, 0
(Class2.get)
D=0
// C_PUSH, static, 0
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH, static, 1
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC, sub, 
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN, return, 
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M-1
AM=D
D=M
@THAT
M=D
@R13
D=M-1
AM=D
D=M
@THIS
M=D
@R13
D=M-1
AM=D
D=M
@ARG
M=D
@R13
D=M-1
AM=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
