@256
D=A
@SP
M=D
@SP
D=M
@SP
D=M
@ARG
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
// C_FUNCTION, Main.fibonacci, 0
(Main.fibonacci)
D=0
// C_PUSH, argument, 0
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH, constant, 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC, lt, 
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LABEL_1
D;JLT
D=0
@LABEL_2
0;JMP
(LABEL_1)
D=-1
(LABEL_2)
@SP
A=M
M=D
@SP
M=M+1
// C_IF, N_LT_2, 
@SP
M=M-1
A=M
D=M
@N_LT_2
D;JNE
// C_GOTO, N_GE_2, 
@N_GE_2
0;JMP
// C_LABEL, N_LT_2, 
(N_LT_2)
// C_PUSH, argument, 0
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN, return, 
@LCL
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@LCL
D=M
@1
A=D-A
D=M
@THAT
M=D
@LCL
D=M
@2
A=D-A
D=M
@THIS
M=D
@LCL
D=M
@3
A=D-A
D=M
@ARG
M=D
@LCL
D=M
@4
A=D-A
D=M
@LCL
M=D
// C_LABEL, N_GE_2, 
(N_GE_2)
// C_PUSH, argument, 0
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH, constant, 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC, sub, 
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// C_CALL, Main.fibonacci, 1
@SP
D=M
@SP
D=M
@ARG
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
// C_PUSH, argument, 0
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH, constant, 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC, sub, 
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// C_CALL, Main.fibonacci, 1
@SP
D=M
@SP
D=M
@ARG
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
// C_ARITHMETIC, add, 
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN, return, 
@LCL
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@LCL
D=M
@1
A=D-A
D=M
@THAT
M=D
@LCL
D=M
@2
A=D-A
D=M
@THIS
M=D
@LCL
D=M
@3
A=D-A
D=M
@ARG
M=D
@LCL
D=M
@4
A=D-A
D=M
@LCL
M=D
// C_FUNCTION, Sys.init, 0
(Sys.init)
D=0
// C_PUSH, constant, 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_CALL, Main.fibonacci, 1
@SP
D=M
@SP
D=M
@ARG
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
// C_LABEL, END, 
(END)
// C_GOTO, END, 
@END
0;JMP
